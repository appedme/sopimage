'use client';

import { Card, CardContent } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { Button } from '@/components/ui/button';
import { GeneratedImage } from '@/types';
import { Download, ExternalLink } from 'lucide-react';
import Image from 'next/image';

interface ImageCardProps {
  image: GeneratedImage;
  modelName: string;
  prompt: string;
  isLoading?: boolean;
}

export const ImageCard = ({ image, modelName, prompt, isLoading = false }: ImageCardProps) => {
  const handleDownload = async () => {
    try {
      const response = await fetch(image.image);
      const blob = await response.blob();
      const url = window.URL.createObjectURL(blob);
      const a = document.createElement('a');
      a.href = url;
      a.download = `${modelName}-${Date.now()}.png`;
      document.body.appendChild(a);
      a.click();
      window.URL.revokeObjectURL(url);
      document.body.removeChild(a);
    } catch (error) {
      console.error('Download failed:', error);
    }
  };

  const handleOpenInNewTab = () => {
    window.open(image.image, '_blank');
  };

  if (isLoading) {
    return (
      <Card className="w-full">
        <CardContent className="p-6">
          <div className="flex justify-between items-center mb-4">
            <Badge variant="secondary">{modelName}</Badge>
          </div>
          <div className="aspect-square bg-muted rounded-lg flex items-center justify-center">
            <div className="text-center space-y-2">
              <div className="w-8 h-8 border-2 border-primary border-t-transparent rounded-full animate-spin mx-auto"></div>
              <p className="text-sm text-muted-foreground">Generating...</p>
            </div>
          </div>
        </CardContent>
      </Card>
    );
  }

  return (
    <Card className="w-full">
      <CardContent className="p-6">
        <div className="flex justify-between items-center mb-4">
          <Badge variant="secondary">{modelName}</Badge>
          <div className="flex gap-2">
            <Button size="sm" variant="outline" onClick={handleDownload}>
              <Download className="w-4 h-4" />
            </Button>
            <Button size="sm" variant="outline" onClick={handleOpenInNewTab}>
              <ExternalLink className="w-4 h-4" />
            </Button>
          </div>
        </div>
        <div className="aspect-square relative rounded-lg overflow-hidden bg-muted">
          <Image
            src={image.image}
            alt={`Generated by ${modelName}: ${prompt}`}
            fill
            className="object-cover"
            unoptimized
          />
        </div>
      </CardContent>
    </Card>
  );
};
